/*
	[NOTE] This file is automatically generated. Please do not hand-coded.
  
	Template:C++,CompositionType.h.xsl
	Generated Date:2017/08/21 17:25:14
	Generater Name:BricRoboGen Ver:1.7.10.355  
 */
#ifndef PidInt8_H
#define PidInt8_H


/* 実装のテンプレートとして利用してください
#include "stdafx.h"
#include "PidInt8.h"

void PidInt8::ConfigParam(int8_t Kp1, int8_t Kp2, int8_t Ki1, int8_t Ki2, int8_t Kd1, int8_t Kd2)
{
}
  int16_t PidInt8::Calc(short target, short current)
{
}
  void PidInt8::Reset()
{
}
  void PidInt8::SetParam(int8_t p1, int8_t p2, int8_t i1, int8_t i2, int8_t d1, int8_t d2)
{
}
  */


/**
Arduinoでメモリ節約するため、パラメタが8ビットのPID、。
@author eguchi
@version 1.0
*/
class PidInt8
{
	/*
	User Defined Attribute
	*/
	/**
	
	*/
	private: int8_t _Kp1;
	/**
	
	*/
	private: int8_t _Kp2;
	/**
	
	*/
	private: int8_t _Ki1;
	/**
	
	*/
	private: int8_t _Ki2;
	/**
	
	*/
	private: int8_t _Kd1;
	/**
	
	*/
	private: int8_t _Kd2;
	/**
	
	*/
	private: int16_t _oldD;
	/**
	
	*/
	private: int16_t _I;
	/*
	User Defined Method
	*/
	/**
	現在の値と目標値から制御量を計算する。
	@param target	
	@param current	
	*/
	public: int16_t Calc(short target, short current);
	/**
	内部をリセットする。
	*/
	public: void Reset();
	/**
	
	@param p1	
	@param p2	
	@param i1	
	@param i2	
	@param d1	
	@param d2	
	*/
	public: void SetParam(int8_t p1, int8_t p2, int8_t i1, int8_t i2, int8_t d1, int8_t d2);
	/*
	Auto Generated Attribute
	*/
	/*
	Auto Generated Method
	*/
	/**
	ConfigParam
	@param Kp1	
	@param Kp2	
	@param Ki1	
	@param Ki2	
	@param Kd1	
	@param Kd2	
	*/
	public: void ConfigParam(int8_t Kp1, int8_t Kp2, int8_t Ki1, int8_t Ki2, int8_t Kd1, int8_t Kd2);
	/*
	RunnableEntity
	*/
	/*
	Port
	*/
};

/* Procedure Template
*/

#endif /* PidInt8_H */
