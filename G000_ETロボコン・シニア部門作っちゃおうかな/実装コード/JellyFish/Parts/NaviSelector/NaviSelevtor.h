/*
	[NOTE] This file is automatically generated. Please do not hand-coded.
  
	Template:C++,CompositionType.h.xsl
	Generated Date:2017/01/23 13:47:44
	Generater Name:BricRoboGen Ver:1.7.10.351  
 */
#ifndef NaviSelevtor_H
#define NaviSelevtor_H

#include "../../../BricRoboSketch/ValueIF.h"
#include "../../../Common/PositionIF.h"
#include "../../../Common/JellyFish/JellyFishNavi.h"

/* 実装のテンプレートとして利用してください
#include "stdafx.h"
#include "NaviSelevtor.h"

void NaviSelevtor::ConfigParam(int dummy)
{
}
  void NaviSelevtor::Run()
{
	ValueIF compass;
    Rte_Read_compass(compass);
	ValueIF depth;
    Rte_Read_depth(depth);
	PositionIF gyro;
    Rte_Read_gyro(gyro);
	JellyFishNavi navi;
    Rte_Write_navi(navi);
	ValueIF reset;
    Rte_Receive_reset(reset);

}
*/


/**
ナビゲーションに使うデバイスを切り替える。切り替えはリセットタイミングで、選択はその値による。
０＝Gyro
１＝Compass
@author ike
@version 1.0
*/
class NaviSelevtor
{
	/*
	User Defined Attribute
	*/
	/**
	選択するデバイス番号、デフォルトはCompass
0=compass
1=gyro
	*/
	private: uint8_t _deviceNo;
	/**
	
	*/
	private: int16_t _offsetDir;
	/**
	
	*/
	private: int16_t _offsetRoll;
	/**
	
	*/
	private: int16_t _offsetPitch;
	/*
	User Defined Method
	*/
	/*
	Auto Generated Attribute
	*/
	/*
	Auto Generated Method
	*/
	/**
	ConfigParam
	@param dummy	
	*/
	public: void ConfigParam(int dummy);
	/*
	RunnableEntity
	*/
	/**
	
	*/
	public: void Run();
	/*
	Port
	*/
	/**
	コンパスからの入力
	*/
	/* Rte_Read_compass(ValueIF) */
	BricRoboPortRead(ValueIF,compass);
	/**
	
	*/
	/* Rte_Read_depth(ValueIF) */
	BricRoboPortRead(ValueIF,depth);
	/**
	ジャイロからの入力
	*/
	/* Rte_Read_gyro(PositionIF) */
	BricRoboPortRead(PositionIF,gyro);
	/**
	
	*/
	/* Rte_Write_navi(JellyFishNavi) */
	BricRoboPortWrite(JellyFishNavi,navi);
	/**
	ナビゲーションをZeroリセット。値によりGyroかCompassかリセットするものが違う。
リセットすると、そのデバイスの使うようになる。
０＝Compass
１＝Gyro

	*/
	/* Rte_Receive_reset(ValueIF) */
	BricRoboPortReceive(ValueIF,reset);
};

/* Procedure Template
*/

#endif /* NaviSelevtor_H */
